# -*- mode: snippet -*-
# name: misc_module
# key:<misc
# --

#include <linux/init.h>
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/device.h>
#include <linux/slab.h>
#include <linux/miscdevice.h>
#include <linux/fs.h>
#include <linux/kthread.h>
#include <linux/uaccess.h>
#include <linux/sched.h>

static int misc_open(struct inode *inode, struct file *filp)
{
	return 0;
}

static ssize_t misc_read(struct file *filep, char __user *ubuf, size_t count,
			 loff_t *off)
{
	return 0;
}

static int misc_release(struct inode *inode, struct file *filep)
{
	return 0;
}

static ssize_t misc_write(struct file *filep, const char __user *ubuf,
			  size_t count, loff_t *off)
{
	return 0;
}

static const struct file_operations misc_ops = {
	.open = misc_open,
	.read = misc_read,
	.write = misc_write,
	.release = misc_release,
};

static struct miscdevice misc_miscdev = {
	.minor = MISC_DYNAMIC_MINOR,
	.name = "misc_dev",
	.mode = 0666,
	.fops = &misc_ops,
};

static int __init $1(void)
{
	int ret;

	ret = misc_register(&misc_miscdev);
	if (ret < 0) {
		pr_notice("misc device registration failed, aborting\n");
		return ret;
	}

	pr_info("misc device register sussess.\n");

	return 0;
}

static void __exit $2(void) {
	misc_deregister(&misc_miscdev);
}

module_init($1);
module_exit($2);
MODULE_LICENSE(\"GPL\");
